services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        VERSION: '${PHP_VERSION:-8.2}'
    expose:
      - 9000
    ports:
      - "5173:5173"
      #- "13714:13714"
    restart: unless-stopped
    environment:
      ROLE: app
      APPENV: '${APP_ENV:-production}'
    volumes:
      - './:/var/www/html'
      - './docker/php.ini:/usr/local/etc/php/php.ini'
      - './docker/laravel-worker.conf:/etc/supervisor/conf.d/laravel-worker.conf'
      - './docker/my_cron_tab:/etc/cron.d/my_cron_tab'
    networks:
      - net
    depends_on:
      - db

  webserver:
    image: 'nginx:1.24.0-alpine'
    ports:
      - '8001:80'
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      - './docker/default.conf.template:/etc/nginx/templates/default.conf.template'
      - './:/var/www/html'
    networks:
      - net
    depends_on:
      - app
      - db

  db:
    image: 'postgres:16'
    ports:
      - '5431:5432'
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_USER: '${DB_USERNAME:-secret}'
      POSTGRES_DB: '${DB_DATABASE:-secret}'
    volumes:
      - 'db-data:/var/lib/postgresql/data'
    networks:
      - net
    healthcheck:
      test: ['CMD', "pg_isready -d ${DB_DATABASE} -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  net:
    driver: bridge

volumes:
  db-data:
    driver: local
